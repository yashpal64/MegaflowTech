import { ReactElement } from "react";
import { PortalInto } from "./getContainer";
/**
 * If any of these props are defined on a component, the component will render
 * in a portal instead of the current tree.
 */
export interface RenderConditionalPortalProps {
    /**
     * Boolean if the portal should be used.
     */
    portal?: boolean;
    /**
     * @see {@link Portal#into}
     */
    portalInto?: PortalInto;
    /**
     * @see {@link Portal#intoId}
     */
    portalIntoId?: string;
}
export interface ConditionalPortalProps extends RenderConditionalPortalProps {
    /**
     * This children to render.
     */
    children: ReactElement | null;
}
/**
 * This is a very simple component that is used in other places within react-md
 * to conditionally render the children within a portal or not based on general
 * portal config props.
 */
declare function ConditionalPortal({ portal, portalInto, portalIntoId, children, }: ConditionalPortalProps): ReactElement | null;
declare namespace ConditionalPortal {
    var propTypes: {
        portal: any;
        portalInto: any;
        portalIntoId: any;
        children: any;
    };
}
export default ConditionalPortal;
