"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var useRefCache_1 = __importDefault(require("../useRefCache"));
var delegateEvent_1 = __importDefault(require("./delegateEvent"));
var passiveEvents_1 = require("./passiveEvents");
/**
 * This hook will create a performant scroll listener by enabling passive events
 * if it's supported by the browser and delegating the event as needed.
 */
function useScrollListener(_a) {
    var _b = _a.enabled, enabled = _b === void 0 ? true : _b, onScroll = _a.onScroll, element = _a.element, _c = _a.options, options = _c === void 0 ? passiveEvents_1.isSupported ? { passive: true } : false : _c;
    var callback = useRefCache_1.default(onScroll);
    react_1.useEffect(function () {
        if (!enabled) {
            return;
        }
        var eventHandler = delegateEvent_1.default("scroll", element || window, true, options);
        var handler = function (event) { return callback.current(event); };
        eventHandler.add(handler);
        return function () {
            eventHandler.remove(handler);
        };
        // disabled since useRefCache
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [enabled, element, options]);
}
exports.default = useScrollListener;
//# sourceMappingURL=useScrollListener.js.map