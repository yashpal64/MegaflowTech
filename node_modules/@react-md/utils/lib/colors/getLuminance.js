"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var hexToRGB_1 = __importDefault(require("./hexToRGB"));
var RED_MULTIPLIER = 0.2126;
var GREEN_MULTIPLIER = 0.7152;
var BLUE_MULTIPLIER = 0.0722;
/**
 * I really couldn't figure out how to name these "magic" numbers since the
 * formula doesn't really describe it much:
 *
 * @see https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @private
 */
function get8BitColor(color) {
    color /= 255;
    if (color <= 0.03928) {
        return color / 12.92;
    }
    return Math.pow(((color + 0.055) / 1.055), 2.4);
}
/**
 * A number closest to 0 should be closest to black while a number closest to 1
 * should be closest to white.
 *
 * @see https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 * @private
 */
function getLuminance(color) {
    var _a = hexToRGB_1.default(color), r = _a[0], g = _a[1], b = _a[2];
    var red = get8BitColor(r) * RED_MULTIPLIER;
    var green = get8BitColor(g) * GREEN_MULTIPLIER;
    var blue = get8BitColor(b) * BLUE_MULTIPLIER;
    return red + green + blue;
}
exports.default = getLuminance;
//# sourceMappingURL=getLuminance.js.map