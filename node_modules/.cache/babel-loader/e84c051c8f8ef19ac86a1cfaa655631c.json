{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNeighbors = exports.transitionEventName = exports.is3DSupported = exports.isEqual = undefined;\n\nvar _lodash = require('lodash.isequal');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n * Check whether the CSS property supported\n */\n\n\nfunction isPropertySupported(name, value) {\n  var propName = name;\n  var element = document.createElement('p');\n  document.body.insertBefore(element, null);\n  element.style[propName] = value;\n  var propValue = window.getComputedStyle(element, null).getPropertyValue(propName);\n  document.body.removeChild(element);\n  return propValue === value;\n}\n/*\n * Check whether the CSS 3D properties supported\n */\n\n\nfunction is3DSupported() {\n  return isPropertySupported('perspective', '1px') && isPropertySupported('transform-style', 'preserve-3d');\n}\n/*\n * Get CSS transitionend event name\n */\n\n\nfunction transitionEventName() {\n  if (isPropertySupported('transition', 'opacity 1s')) {\n    return 'transitionend';\n  }\n\n  return 'webkitTransitionEnd';\n}\n/*\n * Get neighbor numbers\n */\n\n\nfunction getNeighbors(num, max) {\n  var neighbor1 = num - 1;\n  var neighbor2 = num + 1;\n  if (neighbor1 < 0) neighbor1 = max;\n  if (neighbor2 > max) neighbor2 = 0;\n  return [neighbor1, neighbor2];\n}\n\nexports.isEqual = _lodash2.default;\nexports.is3DSupported = is3DSupported;\nexports.transitionEventName = transitionEventName;\nexports.getNeighbors = getNeighbors;","map":{"version":3,"sources":["utils.es6"],"names":["propName","element","document","propValue","window","isPropertySupported","neighbor1","num","neighbor2","isEqual","is3DSupported","transitionEventName","getNeighbors"],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;;;;;;;;AAEA;;;;;AAGA,SAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,EAA0C;AACxC,MAAMA,QAAAA,GAAN,IAAA;AAEA,MAAMC,OAAAA,GAAUC,QAAAA,CAAAA,aAAAA,CAAhB,GAAgBA,CAAhB;AACAA,EAAAA,QAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAAA,OAAAA,EAAAA,IAAAA;AAEAD,EAAAA,OAAAA,CAAAA,KAAAA,CAAAA,QAAAA,IAAAA,KAAAA;AAEA,MAAME,SAAAA,GAAYC,MAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAAA,gBAAAA,CAAlB,QAAkBA,CAAlB;AAIAF,EAAAA,QAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAAA,OAAAA;AAEA,SAAOC,SAAAA,KAAP,KAAA;AACD;AAED;;;;;AAGA,SAAA,aAAA,GAAyB;AACvB,SAAOE,mBAAAA,CAAAA,aAAAA,EAAAA,KAAAA,CAAAA,IACAA,mBAAAA,CAAAA,iBAAAA,EADP,aACOA,CADP;AAED;AAED;;;;;AAGA,SAAA,mBAAA,GAA+B;AAC7B,MAAIA,mBAAAA,CAAAA,YAAAA,EAAJ,YAAIA,CAAJ,EAAqD;AACnD,WAAA,eAAA;AACD;;AAED,SAAA,qBAAA;AACD;AAED;;;;;AAGA,SAAA,YAAA,CAAA,GAAA,EAAA,GAAA,EAAgC;AAC9B,MAAIC,SAAAA,GAAYC,GAAAA,GAAhB,CAAA;AACA,MAAIC,SAAAA,GAAYD,GAAAA,GAAhB,CAAA;AAEA,MAAID,SAAAA,GAAJ,CAAA,EAAmBA,SAAAA,GAAAA,GAAAA;AACnB,MAAIE,SAAAA,GAAJ,GAAA,EAAqBA,SAAAA,GAAAA,CAAAA;AAErB,SAAO,CAAA,SAAA,EAAP,SAAO,CAAP;AACD;;QAGCC,O;QACAC,a,GAAAA,a;QACAC,mB,GAAAA,mB;QACAC,Y,GAAAA,Y","sourcesContent":["import isEqual from 'lodash.isequal';\n\n/*\n * Check whether the CSS property supported\n */\nfunction isPropertySupported(name, value) {\n  const propName = name;\n\n  const element = document.createElement('p');\n  document.body.insertBefore(element, null);\n\n  element.style[propName] = value;\n\n  const propValue = window\n    .getComputedStyle(element, null)\n    .getPropertyValue(propName);\n\n  document.body.removeChild(element);\n\n  return propValue === value;\n}\n\n/*\n * Check whether the CSS 3D properties supported\n */\nfunction is3DSupported() {\n  return isPropertySupported('perspective', '1px') &&\n         isPropertySupported('transform-style', 'preserve-3d');\n}\n\n/*\n * Get CSS transitionend event name\n */\nfunction transitionEventName() {\n  if (isPropertySupported('transition', 'opacity 1s')) {\n    return 'transitionend';\n  }\n\n  return 'webkitTransitionEnd';\n}\n\n/*\n * Get neighbor numbers\n */\nfunction getNeighbors(num, max) {\n  let neighbor1 = num - 1;\n  let neighbor2 = num + 1;\n\n  if (neighbor1 < 0) neighbor1 = max;\n  if (neighbor2 > max) neighbor2 = 0;\n\n  return [neighbor1, neighbor2];\n}\n\nexport {\n  isEqual,\n  is3DSupported,\n  transitionEventName,\n  getNeighbors,\n};\n"]},"metadata":{},"sourceType":"script"}