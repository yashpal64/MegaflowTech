{"ast":null,"code":"import React, { useState } from 'react';\nvar styles = {\n  \"card\": \"_xsi02\",\n  \"cardTitle\": \"_2yKGs\",\n  \"animate-title-out\": \"_1H_aI\",\n  \"cardHovered\": \"_-MJ6C\",\n  \"cardBackgroundImage\": \"_2NQek\",\n  \"cardImage\": \"__wvBT\",\n  \"cardDescriptionHover\": \"_3uuI8\",\n  \"animate-title\": \"_3NbVf\",\n  \"animate-description\": \"_3hBoU\"\n};\n\nvar HoverableCard = function HoverableCard(_ref) {\n  var cardTitle = _ref.cardTitle,\n      cardDescription = _ref.cardDescription,\n      cardImage = _ref.cardImage,\n      hoverBgColor = _ref.hoverBgColor;\n\n  var _useState = useState(false),\n      isHovered = _useState[0],\n      setIsHovered = _useState[1];\n\n  var renderBackground = function renderBackground() {\n    if (isHovered) {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"img\", {\n        src: cardImage,\n        className: styles.cardBackgroundImage\n      }));\n    }\n\n    return null;\n  };\n\n  var _onMouseEnter = function onMouseEnter() {\n    setIsHovered(true);\n  };\n\n  var _onMouseLeave = function onMouseLeave() {\n    setIsHovered(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    style: isHovered ? {\n      backgroundColor: hoverBgColor || 'grey'\n    } : {},\n    onMouseEnter: function onMouseEnter() {\n      return _onMouseEnter();\n    },\n    onMouseLeave: function onMouseLeave() {\n      return _onMouseLeave();\n    }\n  }, renderBackground(), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.cardImage,\n    src: cardImage\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardDescriptionHover\n  }, cardDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardTitle\n  }, cardTitle));\n};\n\nexport { HoverableCard };","map":{"version":3,"sources":["../src/index.js"],"names":["HoverableCard","cardTitle","cardDescription","cardImage","hoverBgColor","isHovered","setIsHovered","useState","renderBackground","styles","cardBackgroundImage","onMouseEnter","onMouseLeave","backgroundColor","cardDescriptionHover"],"mappings":";;;;;;;;;;;;;IAGaA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAKvB;AAAA,MAJJC,SAII,GAAA,IAAA,CAJJA,SAII;AAAA,MAHJC,eAGI,GAAA,IAAA,CAHJA,eAGI;AAAA,MAFJC,SAEI,GAAA,IAAA,CAFJA,SAEI;AAAA,MADJC,YACI,GAAA,IAAA,CADJA,YACI;;AAAA,MAAA,SAAA,GAC8BG,QAAQ,CADtC,KACsC,CADtC;AAAA,MACGF,SADH,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MACcC,YADd,GAAA,SAAA,CAAA,CAAA,CAAA;;AAGJ,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAA,SAAA,EAAe;AACb,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAR,SAAA;AAAqB,QAAA,SAAS,EAAEC,MAAM,CAACC;AAAvC,OAAA,CADF,CADF;AAKD;;AACD,WAAA,IAAA;AARF,GAAA;;AAWA,MAAMC,aAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,IAAAA,YAAY,CAAZA,IAAY,CAAZA;AADF,GAAA;;AAIA,MAAMM,aAAY,GAAG,SAAfA,YAAe,GAAM;AACzBN,IAAAA,YAAY,CAAZA,KAAY,CAAZA;AADF,GAAA;;AAIA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAEG,MAAM,CADnB,IAAA;AAEE,IAAA,KAAK,EAAEJ,SAAS,GAAG;AAAEQ,MAAAA,eAAe,EAAET,YAAY,IAAI;AAAnC,KAAH,GAFlB,EAAA;AAGE,IAAA,YAAY,EAAE,SAAA,YAAA,GAAA;AAAA,aAAMO,aAAN,EAAA;AAHhB,KAAA;AAIE,IAAA,YAAY,EAAE,SAAA,YAAA,GAAA;AAAA,aAAMC,aAAN,EAAA;AAAA;AAJhB,GAAA,EAMGJ,gBANH,EAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEC,MAAM,CAAtB,SAAA;AAAkC,IAAA,GAAG,EAAEN;AAAvC,GAAA,CADF,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAEM,MAAM,CAACK;AAAxB,GAAA,EATJ,eASI,CAFF,CAPF,EAAA,aAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACR;AAAvB,GAAA,EAZJ,SAYI,CAXF,CADF;AA3BK,C","sourcesContent":["import React, { useState } from 'react'\nimport styles from './styles.module.css'\n\nexport const HoverableCard = ({\n  cardTitle,\n  cardDescription,\n  cardImage,\n  hoverBgColor\n}) => {\n  const [isHovered, setIsHovered] = useState(false)\n\n  const renderBackground = () => {\n    if (isHovered) {\n      return (\n        <div>\n          <img src={cardImage} className={styles.cardBackgroundImage} />\n        </div>\n      )\n    }\n    return null\n  }\n\n  const onMouseEnter = () => {\n    setIsHovered(true)\n  }\n\n  const onMouseLeave = () => {\n    setIsHovered(false)\n  }\n\n  return (\n    <div\n      className={styles.card}\n      style={isHovered ? { backgroundColor: hoverBgColor || 'grey' } : {}}\n      onMouseEnter={() => onMouseEnter()}\n      onMouseLeave={() => onMouseLeave()}\n    >\n      {renderBackground()}\n      <div>\n        <img className={styles.cardImage} src={cardImage} />\n        <span className={styles.cardDescriptionHover}>{cardDescription}</span>\n      </div>\n      <div className={styles.cardTitle}>{cardTitle}</div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}